{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { fetchProducts } from '../data/Product'; // Hàm lấy dữ liệu từ API\n\nexport default {\n  name: 'ComCoffee',\n  data() {\n    return {\n      products: [],\n      // Lưu danh sách sản phẩm từ API\n      priceFilter: {\n        min: null,\n        max: null\n      },\n      // Bộ lọc giá\n      selectedTypes: [],\n      // Bộ lọc loại sản phẩm\n      uniqueTypes: [] // Danh sách các loại sản phẩm duy nhất\n    };\n  },\n  computed: {\n    // Lọc sản phẩm theo bộ lọc\n    filteredProducts() {\n      return this.products.filter(product => {\n        // Bộ lọc loại sản phẩm\n        if (this.selectedTypes.length > 0 && !this.selectedTypes.includes(product.type)) {\n          return false;\n        }\n        // Bộ lọc giá\n        if (this.priceFilter.min !== null && product.price < this.priceFilter.min) {\n          return false;\n        }\n        if (this.priceFilter.max !== null && product.price > this.priceFilter.max) {\n          return false;\n        }\n        return true;\n      });\n    }\n  },\n  mounted() {\n    // Gọi API khi component được mount\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const fetchedProducts = await fetchProducts(); // Lấy dữ liệu từ API\n        this.products = fetchedProducts.filter(item => item.type === 'coffee'); // Gán vào danh sách sản phẩm\n        // Lấy danh sách các loại sản phẩm duy nhất\n        this.uniqueTypes = [...new Set(fetchedProducts.map(product => product.type))];\n      } catch (error) {\n        console.error('Lỗi khi lấy dữ liệu sản phẩm:', error);\n      }\n    },\n    // Áp dụng bộ lọc giá\n    applyPriceFilter() {\n      // Có thể thực hiện thêm các thao tác nếu cần\n    },\n    // Kiểm tra giá trị nhập vào không phải là số âm\n    validatePrice(event) {\n      if (event.target.value < 0) {\n        event.target.value = 0; // Nếu nhập giá trị âm, đặt lại thành 0\n      }\n    }\n  }\n};","map":{"version":3,"names":["fetchProducts","name","data","products","priceFilter","min","max","selectedTypes","uniqueTypes","computed","filteredProducts","filter","product","length","includes","type","price","mounted","fetchData","methods","fetchedProducts","item","Set","map","error","console","applyPriceFilter","validatePrice","event","target","value"],"sources":["D:\\BaiHoc\\HK6\\CongCuVaMoiTruongPhatTrienUngDung\\Vue-Project\\my-project-restaurant\\src\\components\\ComCoffee.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-coffe\">\r\n    <!-- Bộ lọc bên trái -->\r\n    <div class=\"filter-section\">\r\n      <!-- Bộ lọc giá -->\r\n      <div class=\"filter-price\">\r\n        <h3>Khoảng giá</h3>\r\n        <input\r\n          type=\"number\"\r\n          v-model.number=\"priceFilter.min\"\r\n          placeholder=\"Từ\"\r\n          @input=\"validatePrice\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          v-model.number=\"priceFilter.max\"\r\n          placeholder=\"Đến\"\r\n          @input=\"validatePrice\"\r\n        />\r\n        <button @click=\"applyPriceFilter\">Áp dụng</button>\r\n      </div>\r\n\r\n      <!-- Bộ lọc loại sản phẩm -->\r\n      <div class=\"filter-category\">\r\n        <h3>Loại sản phẩm</h3>\r\n        <div v-for=\"type in uniqueTypes\" :key=\"type\">\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              :value=\"type\"\r\n              v-model=\"selectedTypes\"\r\n            />\r\n            {{ type }}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Danh sách sản phẩm -->\r\n    <div class=\"product-grid\">\r\n      <div class=\"menu-item-coffes\" v-for=\"product in filteredProducts\" :key=\"product.id\">\r\n        <router-link\r\n          :to=\"{ name: 'ProductDetail', params: { id: product.id } }\"\r\n          class=\"menu-item-link\"\r\n        >\r\n          <img :src=\"product.image\" :alt=\"product.name\" class=\"menu-item-image\" />\r\n        </router-link>\r\n        <div class=\"menu-item-info\">\r\n          <h3 class=\"menu-item-name\">{{ product.name }}</h3>\r\n          <p class=\"menu-item-price\">{{ product.price }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { fetchProducts } from '../data/Product'; // Hàm lấy dữ liệu từ API\r\n\r\nexport default {\r\n  name: 'ComCoffee',\r\n\r\n  data() {\r\n    return {\r\n      products: [], // Lưu danh sách sản phẩm từ API\r\n      priceFilter: { min: null, max: null }, // Bộ lọc giá\r\n      selectedTypes: [], // Bộ lọc loại sản phẩm\r\n      uniqueTypes: [], // Danh sách các loại sản phẩm duy nhất\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    // Lọc sản phẩm theo bộ lọc\r\n    filteredProducts() {\r\n      return this.products\r\n        .filter(product => {\r\n          // Bộ lọc loại sản phẩm\r\n          if (this.selectedTypes.length > 0 && !this.selectedTypes.includes(product.type)) {\r\n            return false;\r\n          }\r\n          // Bộ lọc giá\r\n          if (this.priceFilter.min !== null && product.price < this.priceFilter.min) {\r\n            return false;\r\n          }\r\n          if (this.priceFilter.max !== null && product.price > this.priceFilter.max) {\r\n            return false;\r\n          }\r\n          return true;\r\n        });\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    // Gọi API khi component được mount\r\n    this.fetchData();\r\n  },\r\n\r\n  methods: {\r\n    async fetchData() {\r\n      try {\r\n        const fetchedProducts = await fetchProducts(); // Lấy dữ liệu từ API\r\n        this.products = fetchedProducts.filter(item => item.type === 'coffee'); // Gán vào danh sách sản phẩm\r\n        // Lấy danh sách các loại sản phẩm duy nhất\r\n        this.uniqueTypes = [...new Set(fetchedProducts.map(product => product.type))];\r\n      } catch (error) {\r\n        console.error('Lỗi khi lấy dữ liệu sản phẩm:', error);\r\n      }\r\n    },\r\n\r\n    // Áp dụng bộ lọc giá\r\n    applyPriceFilter() {\r\n      // Có thể thực hiện thêm các thao tác nếu cần\r\n    },\r\n\r\n    // Kiểm tra giá trị nhập vào không phải là số âm\r\n    validatePrice(event) {\r\n      if (event.target.value < 0) {\r\n        event.target.value = 0; // Nếu nhập giá trị âm, đặt lại thành 0\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.title {\r\n  color: #8b4513; /* Màu nâu cho thẻ h1 */\r\n}\r\n\r\n.title-description {\r\n  color: #8b4513; /* Màu nâu cho thẻ p */\r\n}\r\n\r\n.container-coffe {\r\n  margin-top: 100px;\r\n}\r\n\r\n.product-grid {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n}\r\n\r\n.product-grid > * {\r\n  flex: 0 0 calc(25% - 10px); /* 4 items per row */\r\n  margin: 5px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .product-grid > * {\r\n    flex: 0 0 calc(50% - 10px); /* 2 items per row */\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .product-grid > * {\r\n    flex: 0 0 calc(100% - 10px); /* 1 item per row */\r\n  }\r\n}\r\n\r\n.container-coffe {\r\n  padding-top: 20px;\r\n  background-color: #fff;\r\n}\r\n.menu-item-coffes {\r\n  position: relative;\r\n  width: 200px;\r\n  padding: 0;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  margin: 10px auto;\r\n  background-color: #fff;\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.menu-item-coffes:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.menu-item-link {\r\n  display: block;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  border: 3px solid #b6832c; /* Thêm viền với màu #b6832c */\r\n}\r\n\r\n.menu-item-image {\r\n  width: 150px;\r\n  height: 150px;\r\n  object-fit: cover;\r\n}\r\n\r\n.new-badge {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  background-color: orange;\r\n  color: #fff;\r\n  padding: 5px 10px;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  border-radius: 5px;\r\n}\r\n\r\n.menu-item-info {\r\n  padding: 10px;\r\n  text-align: center;\r\n  background-color: #fff;\r\n  border-top: 1px solid #eee;\r\n  border: 3px solid #b6832c; /* Thêm viền với màu #b6832c */\r\n}\r\n\r\n.menu-item-name {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.menu-item-price {\r\n  font-size: 14px;\r\n  color: #888;\r\n  margin: 5px 0;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;AAyDA,SAASA,aAAY,QAAS,iBAAiB,EAAE;;AAEjD,eAAe;EACbC,IAAI,EAAE,WAAW;EAEjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,WAAW,EAAE;QAAEC,GAAG,EAAE,IAAI;QAAEC,GAAG,EAAE;MAAK,CAAC;MAAE;MACvCC,aAAa,EAAE,EAAE;MAAE;MACnBC,WAAW,EAAE,EAAE,CAAE;IACnB,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACR;IACAC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACP,QAAO,CAChBQ,MAAM,CAACC,OAAM,IAAK;QACjB;QACA,IAAI,IAAI,CAACL,aAAa,CAACM,MAAK,GAAI,KAAK,CAAC,IAAI,CAACN,aAAa,CAACO,QAAQ,CAACF,OAAO,CAACG,IAAI,CAAC,EAAE;UAC/E,OAAO,KAAK;QACd;QACA;QACA,IAAI,IAAI,CAACX,WAAW,CAACC,GAAE,KAAM,IAAG,IAAKO,OAAO,CAACI,KAAI,GAAI,IAAI,CAACZ,WAAW,CAACC,GAAG,EAAE;UACzE,OAAO,KAAK;QACd;QACA,IAAI,IAAI,CAACD,WAAW,CAACE,GAAE,KAAM,IAAG,IAAKM,OAAO,CAACI,KAAI,GAAI,IAAI,CAACZ,WAAW,CAACE,GAAG,EAAE;UACzE,OAAO,KAAK;QACd;QACA,OAAO,IAAI;MACb,CAAC,CAAC;IACN;EACF,CAAC;EAEDW,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMD,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAME,eAAc,GAAI,MAAMpB,aAAa,CAAC,CAAC,EAAE;QAC/C,IAAI,CAACG,QAAO,GAAIiB,eAAe,CAACT,MAAM,CAACU,IAAG,IAAKA,IAAI,CAACN,IAAG,KAAM,QAAQ,CAAC,EAAE;QACxE;QACA,IAAI,CAACP,WAAU,GAAI,CAAC,GAAG,IAAIc,GAAG,CAACF,eAAe,CAACG,GAAG,CAACX,OAAM,IAAKA,OAAO,CAACG,IAAI,CAAC,CAAC,CAAC;MAC/E,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAED;IACAE,gBAAgBA,CAAA,EAAG;MACjB;IAAA,CACD;IAED;IACAC,aAAaA,CAACC,KAAK,EAAE;MACnB,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAI,GAAI,CAAC,EAAE;QAC1BF,KAAK,CAACC,MAAM,CAACC,KAAI,GAAI,CAAC,EAAE;MAC1B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}