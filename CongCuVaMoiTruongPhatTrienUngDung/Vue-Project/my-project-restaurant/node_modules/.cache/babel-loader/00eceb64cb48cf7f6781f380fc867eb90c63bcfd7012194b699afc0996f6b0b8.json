{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport itemTeas from '../data/itemsTea';\nimport itemCoffes from '../data/itemsCoffe';\nimport cart from '@/data/Cart';\nimport eventBus from '@/evenBus';\nexport default {\n  data() {\n    return {\n      product: {},\n      cart: cart,\n      selectedSize: '',\n      // Biến để lưu kích thước đã chọn\n      selectedPrice: '',\n      // Biến để lưu giá đã chọn\n      sizes: [] // Khởi tạo sizes là mảng rỗng\n    };\n  },\n  mounted() {\n    let id = this.$route.params.id;\n    this.product = itemCoffes.find(x => x.id == id) || itemTeas.find(x => x.id == id);\n\n    // Kiểm tra và lấy kích thước từ sản phẩm\n    if (this.product && this.product.size) {\n      this.sizes = this.product.size; // Cập nhật sizes từ sản phẩm\n      this.selectedSize = this.sizes[0].type; // Chọn kích thước đầu tiên\n      this.selectedPrice = this.sizes[0].price; // Cập nhật giá ban đầu\n    }\n  },\n  methods: {\n    updatePrice(newPrice) {\n      this.selectedPrice = newPrice; // Cập nhật giá khi chọn kích thước\n    },\n    addToCart(product, size, price) {\n      // Kiểm tra nếu sản phẩm trong giỏ hàng đã bị xóa hoặc giảm số lượng hết\n      const itemIndex = this.cart.findIndex(item => item.id === product.id && item.selectedSize === size);\n\n      // Nếu sản phẩm đã có trong giỏ và còn hàng tồn\n      if (itemIndex !== -1) {\n        const item = this.cart[itemIndex];\n        if (product.quality > 0) {\n          item.quantity++; // Tăng số lượng sản phẩm trong giỏ\n          product.quality--; // Giảm số lượng tồn kho\n        } else {\n          // Nếu không còn hàng, xóa sản phẩm khỏi giỏ hàng\n          this.cart.splice(itemIndex, 1); // Xóa sản phẩm ra khỏi giỏ\n        }\n      } else if (product.quality > 0) {\n        // Nếu sản phẩm chưa có trong giỏ và còn hàng tồn\n        this.cart.push({\n          ...product,\n          selectedSize: size,\n          selectedPrice: price,\n          quantity: 1\n        });\n        product.quality--; // Giảm số lượng tồn kho\n      }\n\n      // Cập nhật lại giỏ hàng vào localStorage\n      this.updateLocalStorage();\n\n      // Phát sự kiện cập nhật giỏ hàng\n      eventBus.emit('cart-updated', this.cart.length); // Truyền số lượng sản phẩm trong giỏ\n    },\n    // Hàm cập nhật giỏ hàng vào localStorage\n    updateLocalStorage() {\n      // Xóa tất cả sản phẩm không hợp lệ (ví dụ hết hàng) khỏi giỏ hàng trước khi lưu lại\n      this.cart = this.cart.filter(item => item.quality > 0);\n\n      // Lưu giỏ hàng vào localStorage\n      localStorage.setItem('cart', JSON.stringify(this.cart));\n    }\n  }\n};","map":{"version":3,"names":["itemTeas","itemCoffes","cart","eventBus","data","product","selectedSize","selectedPrice","sizes","mounted","id","$route","params","find","x","size","type","price","methods","updatePrice","newPrice","addToCart","itemIndex","findIndex","item","quality","quantity","splice","push","updateLocalStorage","emit","length","filter","localStorage","setItem","JSON","stringify"],"sources":["D:\\BaiHoc\\HK6\\CongCuVaMoiTruongPhatTrienUngDung\\Vue-Project\\my-project-restaurant\\src\\components\\ComProductDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"menu\">\r\n    <div class=\"menu-carousel\">\r\n      <div class=\"menu-item-detail\">\r\n        <img :src=\"product.image\" alt=\"Juice\" class=\"menu-item-image\" />\r\n        <div class=\"menu-item-detail-info\">\r\n          <h3>{{ product.name }}</h3>\r\n          <p>{{ product.description }}</p>\r\n          <p class=\"Product-Pice\">{{ selectedPrice }}</p>\r\n          <p>Số lượng còn: {{ product.quality }}</p>\r\n\r\n          <!-- Chọn kích thước -->\r\n          <div class=\"size-selection\">\r\n            <h4>Chọn kích thước</h4>\r\n            <div class=\"size-options\">\r\n              <div v-for=\"size in sizes\" :key=\"size.id\">\r\n                <input\r\n                  type=\"radio\"\r\n                  :id=\"'size-' + size.id\"\r\n                  :value=\"size.type\"\r\n                  v-model=\"selectedSize\"\r\n                  @change=\"updatePrice(size.price)\"\r\n                />\r\n                <label :for=\"'size-' + size.id\">{{ size.type }}</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"add-item\">\r\n          <div v-if=\"parseInt(product.quality) === 0\">Hết hàng</div>\r\n          <div v-else>\r\n            <button\r\n              class=\"add-to-cart-button\"\r\n              @click=\"addToCart(product, selectedSize, selectedPrice)\"\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport itemTeas from '../data/itemsTea';\r\nimport itemCoffes from '../data/itemsCoffe';\r\nimport cart from '@/data/Cart';\r\nimport eventBus from '@/evenBus';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      product: {},\r\n      cart: cart,\r\n      selectedSize: '', // Biến để lưu kích thước đã chọn\r\n      selectedPrice: '', // Biến để lưu giá đã chọn\r\n      sizes: [], // Khởi tạo sizes là mảng rỗng\r\n    };\r\n  },\r\n  mounted() {\r\n    let id = this.$route.params.id;\r\n    this.product = itemCoffes.find((x) => x.id == id) || itemTeas.find((x) => x.id == id);\r\n\r\n    // Kiểm tra và lấy kích thước từ sản phẩm\r\n    if (this.product && this.product.size) {\r\n      this.sizes = this.product.size; // Cập nhật sizes từ sản phẩm\r\n      this.selectedSize = this.sizes[0].type; // Chọn kích thước đầu tiên\r\n      this.selectedPrice = this.sizes[0].price; // Cập nhật giá ban đầu\r\n    }\r\n  },\r\n  methods: {\r\n    updatePrice(newPrice) {\r\n      this.selectedPrice = newPrice; // Cập nhật giá khi chọn kích thước\r\n    },\r\n\r\n    addToCart(product, size, price) {\r\n      // Kiểm tra nếu sản phẩm trong giỏ hàng đã bị xóa hoặc giảm số lượng hết\r\n      const itemIndex = this.cart.findIndex(\r\n        (item) => item.id === product.id && item.selectedSize === size\r\n      );\r\n\r\n      // Nếu sản phẩm đã có trong giỏ và còn hàng tồn\r\n      if (itemIndex !== -1) {\r\n        const item = this.cart[itemIndex];\r\n        if (product.quality > 0) {\r\n          item.quantity++; // Tăng số lượng sản phẩm trong giỏ\r\n          product.quality--; // Giảm số lượng tồn kho\r\n        } else {\r\n          // Nếu không còn hàng, xóa sản phẩm khỏi giỏ hàng\r\n          this.cart.splice(itemIndex, 1); // Xóa sản phẩm ra khỏi giỏ\r\n        }\r\n      } else if (product.quality > 0) {\r\n        // Nếu sản phẩm chưa có trong giỏ và còn hàng tồn\r\n        this.cart.push({\r\n          ...product,\r\n          selectedSize: size,\r\n          selectedPrice: price,\r\n          quantity: 1,\r\n        });\r\n        product.quality--; // Giảm số lượng tồn kho\r\n      }\r\n\r\n      // Cập nhật lại giỏ hàng vào localStorage\r\n      this.updateLocalStorage();\r\n\r\n      // Phát sự kiện cập nhật giỏ hàng\r\n      eventBus.emit('cart-updated', this.cart.length); // Truyền số lượng sản phẩm trong giỏ\r\n    },\r\n\r\n    // Hàm cập nhật giỏ hàng vào localStorage\r\n    updateLocalStorage() {\r\n      // Xóa tất cả sản phẩm không hợp lệ (ví dụ hết hàng) khỏi giỏ hàng trước khi lưu lại\r\n      this.cart = this.cart.filter((item) => item.quality > 0);\r\n\r\n      // Lưu giỏ hàng vào localStorage\r\n      localStorage.setItem('cart', JSON.stringify(this.cart));\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.menu-item-detail {\r\n  display: flex; /* Sử dụng flexbox để sắp xếp ảnh và thông tin */\r\n  align-items: flex-start; /* Căn lề cho phần thông tin bên trái */\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* Khung nổi */\r\n  border-radius: 8px;\r\n  margin: 20px 0; /* Khoảng cách giữa các mục */\r\n  overflow: hidden; /* Đảm bảo không bị tràn ra ngoài khung */\r\n  background-color: #fff; /* Màu nền cho khung */\r\n}\r\n\r\n.menu-item-image {\r\n  width: 300px; /* Độ rộng của ảnh */\r\n  height: auto; /* Giữ tỉ lệ cho ảnh */\r\n  align-self: center; /* Căn giữa ảnh */\r\n  border-radius: 8px; /* Bo tròn góc cho ảnh */\r\n}\r\n\r\n.menu-item-detail-info {\r\n  padding: 20px; /* Thêm khoảng cách cho thông tin */\r\n  text-align: left;\r\n  flex: 1; /* Chiếm hết không gian còn lại */\r\n}\r\n\r\n.size-selection {\r\n  margin-top: 10px; /* Khoảng cách giữa kích thước và mô tả */\r\n  text-align: left; /* Căn lề trái cho văn bản */\r\n}\r\n\r\n.size-options {\r\n  display: flex; /* Hiển thị các lựa chọn kích thước theo hàng ngang */\r\n  gap: 10px; /* Khoảng cách giữa các radio button */\r\n}\r\n\r\n.menu-item-detail-info h3 {\r\n  font-size: 40px; /* Kích thước tiêu đề */\r\n  margin: 0 0 10px;\r\n  font-style: italic;\r\n  color: orange;\r\n}\r\n\r\n.menu-item-detail-info p {\r\n  margin: 0 0 5px; /* Khoảng cách giữa các đoạn văn */\r\n}\r\n.add-to-cart-button {\r\n  margin-top: 10px;\r\n  width: 30px;\r\n  height: 30px;\r\n  background-color: #ff8c00;\r\n  border: none;\r\n  color: #fff;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  border-radius: 50%;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.add-to-cart-button:hover {\r\n  background-color: #e67e00;\r\n}\r\n.menu-carousel {\r\n  padding-top: 20px;\r\n}\r\n.menu-item-detail {\r\n  width: 400px; /* Chiều rộng cố định cho khối vuông */\r\n  height: 670px; /* Chiều cao cố định cho khối vuông */\r\n  margin: 50px auto; /* Căn giữa theo chiều ngang với margin tự động */\r\n  display: flex; /* Sử dụng flexbox */\r\n  flex-direction: column; /* Xếp theo chiều dọc */\r\n  justify-content: center; /* Căn giữa nội dung theo chiều dọc */\r\n  align-items: flex-start; /* Căn trái nội dung */\r\n  padding: 20px; /* Padding bên trong khối */\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* Đổ bóng cho khối */\r\n  border-radius: 8px; /* Bo tròn góc khối */\r\n  background-color: #fff; /* Màu nền cho khối */\r\n  border: 3px solid #b6832c; /* Thêm viền với màu #b6832c */\r\n}\r\n\r\n.Product-Pice {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  color: #218838;\r\n}\r\n.add-item {\r\n  align-self: center;\r\n  width: 40px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}