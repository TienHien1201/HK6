{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      cartOrder: [] // Dữ liệu hóa đơn hiển thị\n    };\n  },\n  async created() {\n    try {\n      // Lấy thông tin người dùng hiện tại từ localStorage\n      const user = JSON.parse(localStorage.getItem('userCurrent'));\n      if (user && user.username) {\n        // Gọi API để lấy danh sách hóa đơn\n        const orderHistoryResponse = await axios.get('http://localhost:3000/orderHistory');\n\n        // Lọc hóa đơn của người dùng hiện tại\n        const userOrders = orderHistoryResponse.data.filter(order => order.name === user.username);\n\n        // Gán danh sách hóa đơn vào biến\n        this.cartOrder = userOrders;\n      } else {\n        console.error('Không tìm thấy thông tin người dùng');\n      }\n    } catch (error) {\n      console.error('Lỗi khi lấy dữ liệu hóa đơn:', error);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","cartOrder","created","user","JSON","parse","localStorage","getItem","username","orderHistoryResponse","get","userOrders","filter","order","name","console","error"],"sources":["D:\\BaiHoc\\HK6\\CongCuVaMoiTruongPhatTrienUngDung\\Vue-Project\\my-project-restaurant\\src\\components\\ComOrderDetail.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"cartOrder.length === 0\" class=\"title-empty\" style=\"font-size: 50px\">\r\n      Hóa đơn trống\r\n    </div>\r\n    <div class=\"info-order\" v-else>\r\n      <h2>THÔNG TIN HÓA ĐƠN</h2>\r\n      <table style=\"width: 100%\">\r\n        <thead>\r\n          <tr>\r\n            <th>THỜI GIAN THỰC HIỆN THANH TOÁN</th>\r\n            <th>TÊN NGƯỜI ĐẶT</th>\r\n            <th>CHI TIẾT SẢN PHẨM</th>\r\n            <th>PHƯƠNG THỨC THANH TOÁN</th>\r\n            <th>ĐỊA CHỈ NHẬN HÀNG</th>\r\n            <th>TỔNG TIỀN HÓA ĐƠN</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(order, index) in cartOrder\" :key=\"index\">\r\n            <td>{{ order.dateOrder }}</td>\r\n            <td>{{ order.name }}</td>\r\n            <td>\r\n              <div v-for=\"(item, i) in order.details\" :key=\"i\">\r\n                <img :src=\"item.image\" style=\"height: 100px; width: 100px\" />\r\n                <div>{{ item.quantity }} x {{ item.name }}</div>\r\n                <div>{{ item.selectedSize }}</div>\r\n                <div>{{ item.selectedPrice }}</div>\r\n              </div>\r\n            </td>\r\n            <td>{{ order.paymentMethod }}</td>\r\n            <td>{{ order.address }}</td>\r\n            <td>{{ order.totalPrice }} VNĐ</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cartOrder: [], // Dữ liệu hóa đơn hiển thị\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // Lấy thông tin người dùng hiện tại từ localStorage\r\n      const user = JSON.parse(localStorage.getItem('userCurrent'));\r\n\r\n      if (user && user.username) {\r\n        // Gọi API để lấy danh sách hóa đơn\r\n        const orderHistoryResponse = await axios.get(\r\n          'http://localhost:3000/orderHistory'\r\n        );\r\n\r\n        // Lọc hóa đơn của người dùng hiện tại\r\n        const userOrders = orderHistoryResponse.data.filter(\r\n          (order) => order.name === user.username\r\n        );\r\n\r\n        // Gán danh sách hóa đơn vào biến\r\n        this.cartOrder = userOrders;\r\n      } else {\r\n        console.error('Không tìm thấy thông tin người dùng');\r\n      }\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy dữ liệu hóa đơn:', error);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.title-empty {\r\n  padding-top: 50px;\r\n}\r\n\r\n.info-order {\r\n  padding-top: 50px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse; /* Để loại bỏ khoảng cách giữa các ô */\r\n}\r\n\r\nth,\r\ntd {\r\n  padding: 10px;\r\n  border: 1px solid #b6832c; /* Đường viền cho các ô */\r\n  text-align: left; /* Canh trái cho văn bản */\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2; /* Màu nền cho tiêu đề cột */\r\n  font-weight: bold;\r\n}\r\n\r\ntbody tr:nth-child(even) {\r\n  background-color: #f9f9f9; /* Màu nền khác cho các hàng chẵn */\r\n}\r\n</style>\r\n"],"mappings":"AAyCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE,CAAE;IACjB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF;MACA,MAAMC,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;MAE5D,IAAIJ,IAAG,IAAKA,IAAI,CAACK,QAAQ,EAAE;QACzB;QACA,MAAMC,oBAAmB,GAAI,MAAMV,KAAK,CAACW,GAAG,CAC1C,oCACF,CAAC;;QAED;QACA,MAAMC,UAAS,GAAIF,oBAAoB,CAACT,IAAI,CAACY,MAAM,CAChDC,KAAK,IAAKA,KAAK,CAACC,IAAG,KAAMX,IAAI,CAACK,QACjC,CAAC;;QAED;QACA,IAAI,CAACP,SAAQ,GAAIU,UAAU;MAC7B,OAAO;QACLI,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC;MACtD;IACF,EAAE,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}